<VirtualHost *:80>

    ServerName {THIS_DOMAIN_NAME}
    DocumentRoot /var/www/{ENV_NAME}
    Redirect permanent / https://{THIS_DOMAIN_NAME}/

</VirtualHost>

<VirtualHost *:443>

    ServerName {THIS_DOMAIN_NAME}
    DocumentRoot /var/www/{ENV_NAME}

    # Redirect to www if host does not start with dev/qa
    <If "'%{HTTP_HOST}' !~ /^(dev|qa)\./">
      RewriteRule ^(.*)$ https://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    </If>

    <Directory /var/www/{ENV_NAME}>
        AuthType Basic
        AuthName "{THIS_DOMAIN_NAME}"
        AuthUserFile /etc/httpd/htpasswd/{ENV_NAME}.htpasswd
        Require valid-user
        AllowOverride All
    </Directory>

    SSLEngine On
    SSLCertificateFile /etc/httpd/certs/{DOMAIN_NAME}/cert.pem
    SSLCertificateKeyFile /etc/httpd/certs/{DOMAIN_NAME}/privkey.pem
    SSLCertificateChainFile /etc/httpd/certs/{DOMAIN_NAME}/chain.pem

    ErrorLog /var/log/httpd/{THIS_DOMAIN_NAME}_error.log
    LogLevel {LOG_LEVEL}
    CustomLog /var/log/httpd/{THIS_DOMAIN_NAME}_access.log combined

</VirtualHost>

<VirtualHost *:80>

    ServerName {ENV_NAME}.{SERVER_NAME}
    DocumentRoot /var/www/{ENV_NAME}
    Redirect permanent / https://{ENV_NAME}.{SERVER_NAME}/
    
</VirtualHost>

<VirtualHost *:443>

    ServerName {ENV_NAME}.{SERVER_NAME}
    DocumentRoot /var/www/{ENV_NAME}

    <Directory /var/www/{ENV_NAME}>
        AuthType Basic
        AuthName "{THIS_DOMAIN_NAME}"
        AuthUserFile /etc/httpd/htpasswd/{ENV_NAME}.htpasswd
        Require valid-user
        AllowOverride All
    </Directory>

    SSLEngine On
    SSLCertificateFile /etc/httpd/certs/{SERVER_NAME}/cert.pem
    SSLCertificateKeyFile /etc/httpd/certs/{SERVER_NAME}/privkey.pem
    SSLCertificateChainFile /etc/httpd/certs/{SERVER_NAME}/chain.pem

    ErrorLog /var/log/httpd/{ENV_NAME}.{SERVER_NAME}_error.log
    LogLevel {LOG_LEVEL}
    CustomLog /var/log/httpd/{ENV_NAME}.{SERVER_NAME}_access.log combined

</VirtualHost>
